version: '3'

volumes:
  postgres_data: {}
  static_data: {}
  media_data: {}

services:
  web: &web
    container_name: ${PROJECT_NAME}_web
    depends_on:
      - db
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app/
      - ./static:/home/app/web/static
      - ./media:/home/app/web/media
    env_file: .env
    command: bash -c "python3 manage.py migrate && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - 8000:8000
    restart: always

  db:
    image: postgres:13
    container_name: ${PROJECT_NAME}_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
    restart: always

  redis:
    container_name: ${PROJECT_NAME}_redis
    image: redis:5.0
    restart: always


  celery_worker:
     <<: *web
     build:
      context: .
      dockerfile: Dockerfile
     
     container_name: ${PROJECT_NAME}_worker
     command: celery -A core worker -l INFO
     restart: always
     depends_on:
      - redis
      - web 

  celery_beat:
     <<: *web
     build:
      context: .
      dockerfile: Dockerfile
     container_name: ${PROJECT_NAME}_beat
     command: celery -A core beat -l INFO
     restart: always
     depends_on:
      - redis
      - web