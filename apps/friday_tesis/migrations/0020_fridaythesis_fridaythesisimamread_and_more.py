# Generated by Django 4.1.13 on 2024-01-20 13:20

import apps.common.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0002_alter_districts_name_alter_districts_region_and_more'),
        ('mosque', '0008_alter_mosque_mosque_heating_fuel_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('friday_tesis', '0019_remove_fridaytesis_to_imams_fridaytesis_to_mosque'),
    ]

    operations = [
        migrations.CreateModel(
            name='FridayThesis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('title', models.CharField(max_length=1000, verbose_name='title')),
                ('types', models.CharField(choices=[('friday', 'Friday'), ('hayit', 'Hayit')], default='friday', max_length=6, verbose_name='types')),
                ('file', models.FileField(blank=True, help_text="allowed files: ['pdf', 'doc', 'docx', 'xls', 'xlsx', 'txt', 'zip', 'pptx', 'ppt']", upload_to='files/fridaytesis', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'txt', 'zip', 'pptx', 'ppt']), apps.common.validators.validate_file_size], verbose_name='file')),
                ('file_comment', models.TextField(blank=True, null=True, verbose_name='file_comment')),
                ('attachment', models.FileField(blank=True, help_text="allowed files: ['pdf', 'doc', 'docx', 'xls', 'xlsx', 'txt', 'zip', 'pptx', 'ppt']", upload_to='files/attachment', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'txt', 'zip', 'pptx', 'ppt']), apps.common.validators.validate_file_size], verbose_name='attachment')),
                ('attachment_comment', models.TextField(blank=True, null=True, verbose_name='attachment_comment')),
                ('date', models.DateField(verbose_name='date')),
                ('image', models.BooleanField(default=False, verbose_name='image')),
                ('video', models.BooleanField(default=False, verbose_name='video')),
                ('comment', models.BooleanField(default=False, verbose_name='comment')),
                ('file_bool', models.BooleanField(default=False, verbose_name='file_bool')),
                ('to_district', models.ManyToManyField(blank=True, to='common.districts', verbose_name='to_district')),
                ('to_mosque', models.ManyToManyField(blank=True, to='mosque.mosque', verbose_name='to_mosque')),
                ('to_region', models.ManyToManyField(blank=True, to='common.regions', verbose_name='to_region')),
            ],
            options={
                'verbose_name': 'Juma tezisi ',
                'verbose_name_plural': 'Juma tezislari ',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FridayThesisImamRead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('requirement', models.BooleanField(default=False, verbose_name='requirement')),
                ('state', models.CharField(choices=[('unseen', 'Unseen'), ('accepted', 'Accepted'), ('done', 'Done')], default='unseen', max_length=10, verbose_name='state')),
                ('imam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fridaythesisimamread', to=settings.AUTH_USER_MODEL, verbose_name='imam')),
                ('tesis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fridaythesisimamread', to='friday_tesis.fridaythesis', verbose_name='tesis')),
            ],
            options={
                'verbose_name': 'Juma tezisi bildirishnoma ',
                'verbose_name_plural': 'Juma tezislari bildirishnoma ',
                'ordering': ['-created_at'],
                'unique_together': {('tesis', 'imam')},
            },
        ),
        migrations.CreateModel(
            name='FridayThesisImamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated date')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('child', models.PositiveIntegerField(default=0, verbose_name='child')),
                ('man', models.PositiveIntegerField(default=0, verbose_name='man')),
                ('old_man', models.PositiveIntegerField(default=0, verbose_name='old_man')),
                ('old', models.PositiveIntegerField(default=0, verbose_name='old')),
                ('file', models.FileField(blank=True, help_text="allowed files: ['pdf', 'doc', 'docx', 'xls', 'xlsx', 'txt', 'zip', 'pptx', 'ppt']", upload_to='files/tesisresult', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'txt', 'zip', 'pptx', 'ppt']), apps.common.validators.validate_file_size], verbose_name='file')),
            ],
            options={
                'verbose_name': 'Juma tezisi imom natija ',
                'verbose_name_plural': 'Juma tezislari imom natijalar ',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='fridaytesisimamread',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='fridaytesisimamread',
            name='imam',
        ),
        migrations.RemoveField(
            model_name='fridaytesisimamread',
            name='tesis',
        ),
        migrations.AlterUniqueTogether(
            name='fridaytesisimamresult',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='fridaytesisimamresult',
            name='images',
        ),
        migrations.RemoveField(
            model_name='fridaytesisimamresult',
            name='imam',
        ),
        migrations.RemoveField(
            model_name='fridaytesisimamresult',
            name='tesis',
        ),
        migrations.RemoveField(
            model_name='fridaytesisimamresult',
            name='videos',
        ),
        migrations.AlterField(
            model_name='resultimages',
            name='image',
            field=models.ImageField(blank=True, help_text="allowed images: ['jpg', 'jpeg', 'png', 'svg']", upload_to='images/tesisresult', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'svg']), apps.common.validators.validate_image_size], verbose_name='image'),
        ),
        migrations.AlterField(
            model_name='resultvideos',
            name='video',
            field=models.FileField(blank=True, help_text="allowed videos: ['mp4', 'mpeg', 'mpeg-4', 'm4v']", upload_to='videos/tesisresult', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'mpeg', 'mpeg-4', 'm4v']), apps.common.validators.validate_video_size], verbose_name='video'),
        ),
        migrations.DeleteModel(
            name='FridayTesis',
        ),
        migrations.DeleteModel(
            name='FridayTesisImamRead',
        ),
        migrations.DeleteModel(
            name='FridayTesisImamResult',
        ),
        migrations.AddField(
            model_name='fridaythesisimamresult',
            name='images',
            field=models.ManyToManyField(blank=True, to='friday_tesis.resultimages', verbose_name='images'),
        ),
        migrations.AddField(
            model_name='fridaythesisimamresult',
            name='imam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fridaytesisimamresult', to=settings.AUTH_USER_MODEL, verbose_name='imam'),
        ),
        migrations.AddField(
            model_name='fridaythesisimamresult',
            name='tesis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fridaytesisimamresult', to='friday_tesis.fridaythesis', verbose_name='tesis'),
        ),
        migrations.AddField(
            model_name='fridaythesisimamresult',
            name='videos',
            field=models.ManyToManyField(blank=True, to='friday_tesis.resultvideos', verbose_name='videos'),
        ),
        migrations.AlterUniqueTogether(
            name='fridaythesisimamresult',
            unique_together={('tesis', 'imam')},
        ),
    ]
